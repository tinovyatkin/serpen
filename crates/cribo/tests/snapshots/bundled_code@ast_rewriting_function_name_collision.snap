---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/bundling/ast_rewriting_function_name_collision/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

"""
Module B with a process_data function.
This will conflict with module_a.process_data when bundled.
"""
def process_data_1(input_data: str) -> str:
	"""Process data in module B's way."""
	return f"Module B processed: {input_data.lower()}"
def another_helper() -> str:
	"""A helper function unique to module B."""
	return "Module B helper"
MODULE_NAME_1 = "module_b"
"""
Module A with a process_data function.
This will conflict with module_b.process_data when bundled.
"""
def process_data_2(input_data: str) -> str:
	"""Process data in module A's way."""
	return f"Module A processed: {input_data.upper()}"
def helper_function() -> str:
	"""A helper function unique to module A."""
	return "Module A helper"
MODULE_NAME_2 = "module_a"
"""
Function name collision test.
Both modules define a function with the same name.
"""
process_a = process_data_2
process_b = process_data_1
def main():
	result_a = process_a("input from A")
	result_b = process_b("input from B")
	print(f"Module A result: {result_a}")
	print(f"Module B result: {result_b}")
	return {"module_a": result_a, "module_b": result_b}
if __name__ == "__main__":
	result = main()
	print("Result:", result)
