name: CI

permissions: {}

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10
  PACKAGE_NAME: cribo
  PYTHON_VERSION: '3.12'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12']
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2
        with:
          # Use a shared cache key based on Cargo.lock hash for better cache invalidation
          # Include hash to ensure cache is invalidated when dependencies change
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          # Cache even on build failures to speed up subsequent runs
          cache-on-failure: true

      - name: 'Install cargo insta'
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-insta

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: uv sync --all-groups

      - name: Run Rust tests
        run: cargo test --workspace
        shell: bash

      - name: Install Cribo (development)
        run: uv run --with maturin -- maturin develop --release

      - name: Smoke test CLI
        run: |
          uv run python -m cribo --help
          uv run cribo --version

      - name: E2E bundle test
        env:
          ENTRY_FILE: crates/cribo/tests/fixtures/simple_project/main.py
          OUTPUT_FILE: bundle-test/out.py
        run: |
          mkdir bundle-test
          uv run python -m cribo --entry "${{ env.ENTRY_FILE }}" --output "${{ env.OUTPUT_FILE }}"
          uv run python "${{ env.OUTPUT_FILE }}"
